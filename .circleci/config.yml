version: 2.1

executors:
  setup:
    docker:
      - image: ruby:2.6-slim-stretch
    environment:
        DEBIAN_FRONTEND: noninteractive
        RUBYOPT: -EUTF-8
commands:
  setup_environment:
    description: "setup environment" 
    steps:
      - run: apt-get update
      - run: apt-get install -y gnupg2
      - run: apt-get install -y wget sudo software-properties-common
      - run: echo 'deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main' >> /etc/apt/sources.list.d/pgdg.list
      - run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      # libicu55 install
      - run: add-apt-repository "deb http://security.ubuntu.com/ubuntu xenial-security main"
      - run: apt-get update
      - run: apt-get install -y libicu55 libpq5 libssl1.0.0
      - run: apt-get install -y postgresql-client-10 postgresql-10
      - run: postgres --version
      - checkout
      - run: apt-get update
      - run: apt-get install -y build-essential zlib1g-dev libssl-dev libreadline-dev libyaml-dev libcurl4-openssl-dev libffi-dev pkg-config
      - run: apt-get install -y apache2 apache2-dev libapr1-dev libaprutil1-dev
      - run: apt-get install -y imagemagick libmagick++-dev
      - run: apt-get install -y cvs mercurial subversion git bzr
      - run: apt-get install -y debconf-utils tzdata wget
      # postgres
      - run: mkdir -p /usr/share/man/man1
      - run: mkdir -p /usr/share/man/man7
      - run: apt-get update
      - run: apt-get install -y postgresql postgresql-client postgresql-server-dev-10
      - run: /etc/init.d/postgresql start
      - run: su - postgres -c "psql -U postgres -d postgres -c \"alter user postgres with password 'postgres';\"" 
      - run: apt-get install -y curl unzip
      - run: wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
      - run: echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
      - run: rm -rf /var/lib/apt/lists/*
      - run: apt-get update
      - run: apt-get install -y --allow-unauthenticated google-chrome-stable
      - run: wget http://chromedriver.storage.googleapis.com/`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`/chromedriver_linux64.zip
      - run: unzip chromedriver_linux64.zip
      - run: chmod 755 chromedriver
      - run: mv chromedriver /usr/local/bin/
  build_myredmine:
    description: "build MyRedmine" 
    steps:
      - run: cp ./circleci_files/database.yml ./config/database.yml
      - run:
          working_directory: lib/redmine
          command: |
            bundle install
            cp ../../circleci_files/skip_test.rb skip_test.rb
            git clone https://github.com/akiko-pusu/redmine_issue_templates ../../plugins/redmine_issue_templates
            cp ../../plugins/redmine_issue_templates/Gemfile.local ../../plugins/redmine_issue_templates/Gemfile
            git clone https://github.com/onozaty/redmine-view-customize ../../plugins/view_customize
            git clone https://github.com/vividtone/redmine_vividtone_my_page_blocks ../../plugins/redmine_vividtone_my_page_blocks
            bundle install
            bundle exec rails db:environment:set RAILS_ENV=test
            bundle exec rake generate_secret_token
            bundle exec rake db:migrate RAILS_ENV=test
            bundle exec rake test:scm:setup:all
            bundle exec rake test:scm:update
            bundle exec rake redmine:plugins:migrate NAME=redmine_issue_templates RAILS_ENV=test
            bundle exec rake redmine:plugins:migrate NAME=view_customize RAILS_ENV=test
            bundle exec rake redmine:plugins:migrate NAME=redmine_vividtone_my_page_blocks RAILS_ENV=test
  test_redmine:
    parameters:
      time_zone:
        type: string
      skip_test:
        type: string
    description: "test redmine utc" 
    steps:
      - run:
          working_directory: lib/redmine
          command: |
            touch build_result.txt
            ruby skip_test.rb << parameters.skip_test >>
            echo "config.time_zone = '<< parameters.time_zone >>'" > ../../config/additional_environment.rb
            bundle exec rails runner "p Time.current" -e test
            bundle exec rake test
            bundle exec rake redmine:plugins:test NAME=redmine_issue_templates RAILS_ENV=test
            cp ../../circleci_files/redmine_issue_templates-rails_helper.rb ../../plugins/redmine_issue_templates/spec/rails_helper.rb
            DRIVER=headless RAILS_ENV=test bundle exec rspec -I ../../plugins/redmine_issue_templates/spec
            cat build_result.txt
      - run:
          command: |
            echo "fail test-utc" 
            cat build_result.txt
          when: on_fail
jobs:
  redmine-test:
    executor:
      name: setup
    steps:
      - setup_environment
      - build_myredmine
      - test_redmine:
          time_zone: "UTC"
          skip_test: "UTC_SKIP_TESTS"
      #- test_redmine:
          #time_zone: "Tokyo"
          #skip_test: "TOKYO_SKIP_TESTS"
      #- test_redmine:
          #time_zone: "American Samoa"
          #skip_test: "SAMOA_SKIP_TESTS"
workflows:
  normal:
    jobs:
      - redmine-test
